geom_point(aes(xn,xn1,color="Iterated Data"),size=2) +
geom_line(aes(x,f1,color="Logistic Map",linetype=2)) +
geom_line(aes(x,x)) +
scale_color_manual(name="", values=c("Iterated Data"="red","Logistic Map"="blue")) +
ggtitle("Map of Single Iterations") +
xlab(TeX("$X_n$")) +
ylab(TeX("$X_{n+1}$"))
ggplot(data=data) +
geom_point(aes(xn,xn1,color="Iterated Data"),size=2) +
geom_line(aes(x,f1,color="Logistic Map",linetype=2)) +
geom_line(aes(x,x)) +
scale_color_manual(name="", values=c("Iterated Data"="red","Logistic Map"="blue")) +
scale_shape_identity() +
ggtitle("Map of Single Iterations") +
xlab(TeX("$X_n$")) +
ylab(TeX("$X_{n+1}$"))
ggplot(data=data) +
geom_point(aes(xn,xn1,color="Iterated Data"),size=2) +
geom_line(aes(x,f1,color="Logistic Map")) +
geom_line(aes(x,x)) +
scale_color_manual(name="", values=c("Iterated Data"="red","Logistic Map"="blue")) +
scale_shape_identity() +
ggtitle("Map of Single Iterations") +
xlab(TeX("$X_n$")) +
ylab(TeX("$X_{n+1}$"))
ggplot(data=data) +
geom_point(aes(xn,xn1,color="Iterated Data"),size=2) +
geom_line(aes(x,f1,color="Logistic Map")) +
geom_line(aes(x,x)) +
scale_color_manual(name="", values=c("Iterated Data"="red","Logistic Map"="blue")) +
ggtitle("Map of Single Iterations") +
xlab(TeX("$X_n$")) +
ylab(TeX("$X_{n+1}$"))
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
4-8*0.75
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
data = data.frame(
xn = x,
xn1 = y,
xn2 = c(y[-1],xn1(y[length(y)],R)),
n = n,
x = (n-1) / (m-1),
f1 = f1,
f2 = f2
)
ggplot(data=data) +
geom_point(aes(xn,xn1,color="Iterated Data"),size=2) +
geom_line(aes(x,f1,color="Logistic Map")) +
geom_line(aes(x,x)) +
scale_color_manual(name="", values=c("Iterated Data"="red","Logistic Map"="blue")) +
ggtitle("Map of Single Iterations") +
xlab(TeX("$X_n$")) +
ylab(TeX("$X_{n+1}$"))
ggplot(data=data) +
geom_point(aes(xn,xn2,color="Iterated Data")) +
geom_line(aes(x,f2,color="Logistic Map")) +
geom_line(aes(x,x)) +
scale_color_manual(name="", values=c("Iterated Data"="red","Logistic Map"="blue")) +
ggtitle("Map of Double Iterations") +
xlab(TeX("$X_n$")) +
ylab(TeX("X_{n+2}$"))
R = 4
x0 = 0.2
m=100
x = c(x0)
y = c(xn1(x[1], R))
n = 1:m
f1 = c(xn1(0,R))
f2 = c(xn1(xn1(0,R),R))
for (i in 2:m) {
x[i] = y[i-1]
y[i] = xn1(x[i], R)
f1[i] = c(xn1((i-1)/(m-1),R))
f2[i] = c(xn1(xn1((i-1)/(m-1),R),R))
}
data = data.frame(
xn = x,
xn1 = y,
xn2 = c(y[-1],xn1(y[length(y)],R)),
n = n,
x = (n-1) / (m-1),
f1 = f1,
f2 = f2
)
ggplot(data=data) +
geom_point(aes(xn,xn1,color="Iterated Data"),size=2) +
geom_line(aes(x,f1,color="Logistic Map")) +
geom_line(aes(x,x)) +
scale_color_manual(name="", values=c("Iterated Data"="red","Logistic Map"="blue")) +
ggtitle("Map of Single Iterations") +
xlab(TeX("$X_n$")) +
ylab(TeX("$X_{n+1}$"))
ggplot(data=data) +
geom_point(aes(xn,xn2,color="Iterated Data")) +
geom_line(aes(x,f2,color="Logistic Map")) +
geom_line(aes(x,x)) +
scale_color_manual(name="", values=c("Iterated Data"="red","Logistic Map"="blue")) +
ggtitle("Map of Double Iterations") +
xlab(TeX("$X_n$")) +
ylab(TeX("X_{n+2}$"))
ggplot(data=data) +
geom_point(aes(n,xn)) +
ylim(0,1) +
ggtitle("Evolution from Initial Condition") +
xlab(TeX("$n$")) +
ylab(TeX("$X_n$"))
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
x0 = 0.2000001
m=100
x = c(x0)
y = c(xn1(x[1], R))
n = 1:m
f1 = c(xn1(0,R))
f2 = c(xn1(xn1(0,R),R))
for (i in 2:m) {
x[i] = y[i-1]
y[i] = xn1(x[i], R)
f1[i] = c(xn1((i-1)/(m-1),R))
f2[i] = c(xn1(xn1((i-1)/(m-1),R),R))
}
data = data.frame(
xn = x,
xn1 = y,
xn2 = c(y[-1],xn1(y[length(y)],R)),
n = n,
x = (n-1) / (m-1),
f1 = f1,
f2 = f2
)
ggplot(data=data) +
geom_point(aes(xn,xn1,color="Iterated Data"),size=2) +
geom_line(aes(x,f1,color="Logistic Map")) +
geom_line(aes(x,x)) +
scale_color_manual(name="", values=c("Iterated Data"="red","Logistic Map"="blue")) +
ggtitle("Map of Single Iterations") +
xlab(TeX("$X_n$")) +
ylab(TeX("$X_{n+1}$"))
ggplot(data=data) +
geom_point(aes(xn,xn2,color="Iterated Data")) +
geom_line(aes(x,f2,color="Logistic Map")) +
geom_line(aes(x,x)) +
scale_color_manual(name="", values=c("Iterated Data"="red","Logistic Map"="blue")) +
ggtitle("Map of Double Iterations") +
xlab(TeX("$X_n$")) +
ylab(TeX("X_{n+2}$"))
ggplot(data=data) +
geom_point(aes(n,xn)) +
ylim(0,1) +
ggtitle("Evolution from Initial Condition") +
xlab(TeX("$n$")) +
ylab(TeX("$X_n$"))
1/0.8
R = 1.25
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
R = 3.9
x0 = 0.2000001
m=100
x = c(x0)
y = c(xn1(x[1], R))
n = 1:m
f1 = c(xn1(0,R))
f2 = c(xn1(xn1(0,R),R))
for (i in 2:m) {
x[i] = y[i-1]
y[i] = xn1(x[i], R)
f1[i] = c(xn1((i-1)/(m-1),R))
f2[i] = c(xn1(xn1((i-1)/(m-1),R),R))
}
data = data.frame(
xn = x,
xn1 = y,
xn2 = c(y[-1],xn1(y[length(y)],R)),
n = n,
x = (n-1) / (m-1),
f1 = f1,
f2 = f2
)
ggplot(data=data) +
geom_point(aes(xn,xn1,color="Iterated Data"),size=2) +
geom_line(aes(x,f1,color="Logistic Map")) +
geom_line(aes(x,x)) +
scale_color_manual(name="", values=c("Iterated Data"="red","Logistic Map"="blue")) +
ggtitle("Map of Single Iterations") +
xlab(TeX("$X_n$")) +
ylab(TeX("$X_{n+1}$"))
ggplot(data=data) +
geom_point(aes(xn,xn2,color="Iterated Data")) +
geom_line(aes(x,f2,color="Logistic Map")) +
geom_line(aes(x,x)) +
scale_color_manual(name="", values=c("Iterated Data"="red","Logistic Map"="blue")) +
ggtitle("Map of Double Iterations") +
xlab(TeX("$X_n$")) +
ylab(TeX("X_{n+2}$"))
ggplot(data=data) +
geom_point(aes(n,xn)) +
ylim(0,1) +
ggtitle("Evolution from Initial Condition") +
xlab(TeX("$n$")) +
ylab(TeX("$X_n$"))
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
View(data)
View(data)
ggplot(data=data) +
geom_point(aes(n,xn,shape=23)) +
ylim(0,1) +
ggtitle("Evolution from Initial Condition") +
xlab(TeX("$n$")) +
ylab(TeX("$X_n$"))
ggplot(data=data) +
geom_point(aes(n,xn),shape=23) +
ylim(0,1) +
ggtitle("Evolution from Initial Condition") +
xlab(TeX("$n$")) +
ylab(TeX("$X_n$"))
ggplot(data=data) +
geom_point(aes(n,xn),shape=23) +
geom_point(aes(n,xnp),shape=2) +
ylim(0,1) +
ggtitle("Evolution from Initial Condition") +
xlab(TeX("$n$")) +
ylab(TeX("$X_n$"))
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
m = 10
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
ggplot(data=data) +
geom_point(aes(n,xn),shape=23) +
geom_point(aes(n,xnp),shape=2) +
ylim(0,1) +
ggtitle("Evolution from Initial Condition") +
xlab(TeX("$n$")) +
ylab(TeX("$X_n$"))
View(data)
View(data)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
R = 3.83
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/everything/CU/Classes/CSCI/4446/PS1/kowalski.R', echo=TRUE)
source('~/repos/mcm2019/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
getwd()
setwd("repos/mcm2019/Plotting")
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
View(control)
View(control)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
ggplot(control, aes(x=V1)) +
geom_histogram(binwidth=100) +
xlab("Time Taken (ticks)") +
ylab("Number of Occurrences (out of 250)") +
ggtitle("Histogram of Simulation Times for Control")
ggplot(control, aes(x=V1)) +
geom_histogram(binwidth=100) +
xlab("Time Taken (ticks)") +
ylab("Number of Occurrences (out of 250)") +
ggtitle("Histogram of Simulation Times for Control") +
xlim([0, 12000])
ggplot(control, aes(x=V1)) +
geom_histogram(binwidth=100) +
xlab("Time Taken (ticks)") +
ylab("Number of Occurrences (out of 250)") +
ggtitle("Histogram of Simulation Times for Control") +
xlim(0, 12000)
ggplot(control, aes(x=V1)) +
geom_histogram(binwidth=100) +
xlab("Time Taken (ticks)") +
ylab("Number of Occurrences (out of 250)") +
ggtitle("Histogram of Simulation Times for Control") +
xlim(0, 11000)
ggplot(control, aes(x=V1)) +
geom_histogram(binwidth=100) +
xlab("Time Taken (ticks)") +
ylab("Number of Occurrences (out of 250)") +
ggtitle("Histogram of Simulation Times for Control") +
xlim(3000, 11000)
ggplot(control, aes(x=V1)) +
geom_histogram(binwidth=100) +
xlab("Time Taken (ticks)") +
ylab("Number of Occurrences (out of 250)") +
ggtitle("Histogram of Simulation Times for Control") +
xlim(2000, 11000)
ggplot(control, aes(x=V1)) +
geom_histogram(binwidth=100) +
xlab("Time Taken (ticks)") +
ylab("Number of Occurrences (out of 250)") +
ggtitle("Histogram of Simulation Times for Control") +
xlim(2500, 11000)
deq(from=1000,to=20000,by=50)
seq(from=1000,to=20000,by=50)
c(seq(from=1000,to=20000,by=50),5)
vspeople = read.csv("data/vspeople.csv",header=FALSE,sep=",")
getwd()
vspeople = read.csv("data/vspeople.csv",header=FALSE,sep=",")
vspeople$time = vspeople$V1
vspeople$people = c(seq(from=1000, to=20000, by=50), seq(from=20000,to=100000,by=400))
vspeople$people = c(seq(from=1000, to=20000, by=50), seq(from=20400,to=100000,by=400))
ggplot(vspeople, aes(x=people,y=time))
ggplot(vspeople, aes(x=people,y=time)) +
geom_smooth()
ggplot(vspeople, aes(x=people,y=time)) +
geom_scatter()
ggplot(vspeople, aes(x=people,y=time)) +
geom_point()
ggplot(vspeople, aes(x=people,y=time)) +
geom_point(size=2)
ggplot(vspeople, aes(x=people,y=time)) +
geom_point(size=0.5)
ggplot(vspeople, aes(x=people,y=time)) +
geom_point(size=0.5) +
ggtitle("Simulation Time vs Initial Number of People") +
xlab("Initial People (people") +
ylab("Simulation Time (ticks)")
source('~/repos/mcm2019/Plotting/generatePlots.R', echo=TRUE)
mean(control$time)
sd(control$time)
vswait$wait = rep(seq(from=1,to=60,by=1),each=3)
rep(seq(from=1,to=60,by=1),each=3)
vswait = read.csv("data/vswait.csv",header=FALSE,sep=",")
vswait$time = vswait$V1
vswait$wait = rep(seq(from=1,to=60,by=1),each=3)
vswait$wait = rep(seq(from=1,to=59,by=1),each=3)
ggplot(vswait, aes(x=wait,y=time)) +
geom_point(size=0.5) +
ggtitle("Simulation Time vs Stair Traversal Time") +
xlab("Stair Traversal Time (ticks)") +
ylab("Simulation Time (ticks)")
vsbias = read.csv("data/vsbias.csv",header=FALSE,sep=",")
vsbias$time = vsbias$V1
vsbias$bias = rep(seq(from=1,to=59,by=1),each=3)
vsbias$bias = rep(seq(from=15,to=1,by=-1),each=5)
ggplot(vsbias, aes(x=bias,y=time)) +
geom_point(size=0.5) +
ggtitle("Simulation Time vs Stair Traversal Time") +
xlab("Stair Traversal Time (ticks)") +
ylab("Simulation Time (ticks)")
ggplot(vsbias, aes(x=bias,y=time)) +
geom_point(size=0.5) +
geom_smooth() +
ggtitle("Simulation Time vs Stair Traversal Time") +
xlab("Stair Traversal Time (ticks)") +
ylab("Simulation Time (ticks)")
vsbias$bias = 1/(rep(seq(from=15,to=1,by=-1),each=5))
ggplot(vsbias, aes(x=bias,y=time)) +
geom_point(size=0.5) +
geom_smooth() +
ggtitle("Simulation Time vs Stair Traversal Time") +
xlab("Stair Traversal Time (ticks)") +
ylab("Simulation Time (ticks)")
vsbias$bias = rep(seq(from=15,to=1,by=-1),each=5)
ggplot(vsbias, aes(x=bias,y=time)) +
geom_point(size=0.5) +
geom_smooth() +
ggtitle("Simulation Time vs Stair Traversal Time") +
xlab("Stair Traversal Time (ticks)") +
ylab("Simulation Time (ticks)")
ggplot(vsbias, aes(x=bias,y=time)) +
geom_point(size=0.5) +
geom_smooth() +
ggtitle("Simulation Time vs Reciprocal of Room Bias") +
xlab("Reciprocal of Room Bias") +
ylab("Simulation Time (ticks)")
ggplot(vsbias, aes(x=bias,y=time)) +
geom_point(size=0.5) +
geom_smooth() +
ggtitle("Simulation Time vs Reciprocal of Room Bias") +
xlab("Reciprocal of Room Bias (unitless)") +
ylab("Simulation Time (ticks)")
ggplot(vspeople, aes(x=people,y=time)) +
geom_point(size=0.5) +
geom_smooth(y~x^2)
geom_smooth(aes(method=y~x^2)
geom_smooth(aes(formula=y~x^2)
ggplot(vspeople, aes(x=people,y=time)) +
geom_point(size=0.5) +
geom_smooth(aes(formula=y~x^2)) +
ggtitle("Simulation Time vs Initial Number of People") +
xlab("Initial People (people") +
ylab("Simulation Time (ticks)")
ggplot(vspeople, aes(x=people,y=time)) +
geom_point(size=0.5) +
geom_smooth(aes(formula=y~poly(x,2))) +
ggtitle("Simulation Time vs Initial Number of People") +
xlab("Initial People (people") +
ylab("Simulation Time (ticks)")
geom_smooth(aes(formula=y~x) +
ggplot(vspeople, aes(x=people,y=time)) +
geom_point(size=0.5) +
geom_smooth(aes(formula=y~x)) +
ggtitle("Simulation Time vs Initial Number of People") +
xlab("Initial People (people") +
ylab("Simulation Time (ticks)")
vswait = read.csv("data/vswait.csv",header=FALSE,sep=",")
ggplot(vspeople, aes(x=people,y=time)) +
geom_point(size=0.5) +
geom_smooth(aes(formula=y~x)) +
ggtitle("Simulation Time vs Initial Number of People") +
xlab("Initial People (people") +
ylab("Simulation Time (ticks)")
vswait = read.csv("data/vswait.csv",header=FALSE,sep=",")
vswait$time = vswait$V1
ggplot(vspeople, aes(x=people,y=time)) +
geom_point(size=0.5) +
geom_smooth(aes(formula=(y~x))) +
ggtitle("Simulation Time vs Initial Number of People") +
xlab("Initial People (people") +
ylab("Simulation Time (ticks)")
ggplot(vspeople, aes(x=people,y=time)) +
geom_point(size=0.5) +
geom_smooth(aes(method = lm, formula=(y~x))) +
ggtitle("Simulation Time vs Initial Number of People") +
xlab("Initial People (people") +
ylab("Simulation Time (ticks)")
ggplot(vspeople, aes(x=people,y=time)) +
geom_point(size=0.5) +
geom_smooth(aes(method = "lm", formula=(y~x))) +
ggtitle("Simulation Time vs Initial Number of People") +
xlab("Initial People (people") +
ylab("Simulation Time (ticks)")
mod = lm(vspeople$time ~ vspeople$people)
summary(mod)
mod = lm(vspeople$time ~ vspeople$people^2)
summary(mod)
mod = lm(vspeople$time ~ (vspeople$people)^2)
summary(mod)
mod = lm(vspeople$time ~ poly((vspeople$people),2))
summary(mod)
mod = lm(vspeople$time ~ vspeople$people^2)
summary(mod)
ggplot(vsbias, aes(x=bias,y=time)) +
geom_point(size=0.5) +
geom_smooth() +
ggtitle("Simulation Time vs Room Distribution Bias") +
xlab("Room Distribution Bias (unitless)") +
ylab("Simulation Time (ticks)")
ggplot(vsbias, aes(x=bias,y=time)) +
geom_point(size=0.5) +
geom_smooth() +
ggtitle("Simulation Time vs Room Distribution Bias") +
xlab("Room Distribution Bias (unitless)") +
ylab("Simulation Time (ticks)") +
ylim(0,8000)
ggplot(vsbias, aes(x=bias,y=time)) +
geom_point(size=0.5) +
geom_smooth() +
ggtitle("Simulation Time vs Room Distribution Bias") +
xlab("Room Distribution Bias (unitless)") +
ylab("Simulation Time (ticks)") +
ylim(4000,8000)
